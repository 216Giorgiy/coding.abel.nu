//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestLib.CalculatorClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddTerms", Namespace="http://schemas.datacontract.org/2004/07/TestService")]
    [System.SerializableAttribute()]
    public partial class AddTerms : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Term1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Term2Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Term1 {
            get {
                return this.Term1Field;
            }
            set {
                if ((this.Term1Field.Equals(value) != true)) {
                    this.Term1Field = value;
                    this.RaisePropertyChanged("Term1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Term2 {
            get {
                return this.Term2Field;
            }
            set {
                if ((this.Term2Field.Equals(value) != true)) {
                    this.Term2Field = value;
                    this.RaisePropertyChanged("Term2");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CalculatorClient.ICalculator")]
    public interface ICalculator {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Add", ReplyAction="http://tempuri.org/ICalculator/AddResponse")]
        int Add(int term1, int term2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/AddFromDto", ReplyAction="http://tempuri.org/ICalculator/AddFromDtoResponse")]
        int AddFromDto(TestLib.CalculatorClient.AddTerms terms);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalculator/Multiply", ReplyAction="http://tempuri.org/ICalculator/MultiplyResponse")]
        int Multiply(int factor1, int factor2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalculatorChannel : TestLib.CalculatorClient.ICalculator, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalculatorClient : System.ServiceModel.ClientBase<TestLib.CalculatorClient.ICalculator>, TestLib.CalculatorClient.ICalculator {
        
        public CalculatorClient() {
        }
        
        public CalculatorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalculatorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Add(int term1, int term2) {
            return base.Channel.Add(term1, term2);
        }
        
        public int AddFromDto(TestLib.CalculatorClient.AddTerms terms) {
            return base.Channel.AddFromDto(terms);
        }
        
        public int Multiply(int factor1, int factor2) {
            return base.Channel.Multiply(factor1, factor2);
        }
    }
}
